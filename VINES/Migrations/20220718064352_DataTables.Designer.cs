// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VINES.Models;

#nullable disable

namespace VINES.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220718064352_DataTables")]
    partial class DataTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VINES.Data.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"), 1L, 1);

                    b.Property<string>("contactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("emailAuth")
                        .HasColumnType("bit");

                    b.Property<int>("failedAttempts")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genderID")
                        .HasColumnType("int");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleID")
                        .HasColumnType("int");

                    b.HasKey("userID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VINES.Models.Advertisement", b =>
                {
                    b.Property<int>("advertisementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("advertisementID"), 1L, 1);

                    b.Property<int>("advertiseTypeID")
                        .HasColumnType("int");

                    b.Property<int>("advertisementTitle")
                        .HasColumnType("int");

                    b.Property<int>("advertiserID")
                        .HasColumnType("int");

                    b.Property<int>("clicks")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("imgsrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("postID")
                        .HasColumnType("int");

                    b.Property<string>("textContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("advertisementID");

                    b.HasIndex("advertiserID");

                    b.HasIndex("postID");

                    b.ToTable("advertisement");
                });

            modelBuilder.Entity("VINES.Models.AdvertisementType", b =>
                {
                    b.Property<int>("advertisementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("advertisementID"), 1L, 1);

                    b.Property<int>("institutionID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("advertisementID");

                    b.ToTable("advertisementType");
                });

            modelBuilder.Entity("VINES.Models.Advertisers", b =>
                {
                    b.Property<int>("advertiserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("advertiserID"), 1L, 1);

                    b.Property<int>("institutionID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("advertiserID");

                    b.HasIndex("institutionID");

                    b.HasIndex("userID");

                    b.ToTable("advertisers");
                });

            modelBuilder.Entity("VINES.Models.AuditCategories", b =>
                {
                    b.Property<int>("auditCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("auditCategoryID"), 1L, 1);

                    b.Property<string>("auditCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("auditCategoryID");

                    b.ToTable("auditCategories");
                });

            modelBuilder.Entity("VINES.Models.Bookmarks", b =>
                {
                    b.Property<int>("bookmarkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookmarkID"), 1L, 1);

                    b.Property<int>("patientID")
                        .HasColumnType("int");

                    b.Property<int>("postID")
                        .HasColumnType("int");

                    b.HasKey("bookmarkID");

                    b.HasIndex("patientID");

                    b.HasIndex("postID");

                    b.ToTable("bookmarks");
                });

            modelBuilder.Entity("VINES.Models.CommunityPost", b =>
                {
                    b.Property<int>("communityPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("communityPostID"), 1L, 1);

                    b.Property<int>("communityPostCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("communityPostContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("communityPostTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("postID")
                        .HasColumnType("int");

                    b.HasKey("communityPostID");

                    b.HasIndex("communityPostCategoryID");

                    b.HasIndex("postID");

                    b.ToTable("CommunityPost");
                });

            modelBuilder.Entity("VINES.Models.CommunityPostCategoriesModel", b =>
                {
                    b.Property<int>("communityPostCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("communityPostCategoryID"), 1L, 1);

                    b.Property<string>("communityPostCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("communityPostCategoryID");

                    b.ToTable("communityPostCategories");
                });

            modelBuilder.Entity("VINES.Models.Diseases", b =>
                {
                    b.Property<int>("diseaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diseaseID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("diseaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("diseaseID");

                    b.ToTable("diseases");
                });

            modelBuilder.Entity("VINES.Models.ForumCategory", b =>
                {
                    b.Property<int>("forumCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("forumCategoryID"), 1L, 1);

                    b.Property<string>("forumCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("forumCategoryID");

                    b.ToTable("forumCategory");
                });

            modelBuilder.Entity("VINES.Models.ForumComment", b =>
                {
                    b.Property<int>("forumCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("forumCommentID"), 1L, 1);

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("forumPostID")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("forumCommentID");

                    b.HasIndex("forumPostID");

                    b.HasIndex("userID");

                    b.ToTable("forumComment");
                });

            modelBuilder.Entity("VINES.Models.ForumPost", b =>
                {
                    b.Property<int>("forumPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("forumPostID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("forumCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("forumContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("postID")
                        .HasColumnType("int");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("forumPostID");

                    b.HasIndex("forumCategoryID");

                    b.HasIndex("postID");

                    b.HasIndex("userID");

                    b.ToTable("forumPost");
                });

            modelBuilder.Entity("VINES.Models.Gender", b =>
                {
                    b.Property<int>("genderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genderID"), 1L, 1);

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genderID");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("VINES.Models.Institutions", b =>
                {
                    b.Property<int>("institutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("institutionID"), 1L, 1);

                    b.Property<decimal>("Long")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("institutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("institutionTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("lat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("institutionID");

                    b.HasIndex("institutionTypeID");

                    b.ToTable("institutions");
                });

            modelBuilder.Entity("VINES.Models.InstitutionTypes", b =>
                {
                    b.Property<int>("institutionTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("institutionTypeID"), 1L, 1);

                    b.Property<string>("institutionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("institutionTypeID");

                    b.ToTable("institutionType");
                });

            modelBuilder.Entity("VINES.Models.InstitutionVaccines", b =>
                {
                    b.Property<int>("institutionVaccineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("institutionVaccineID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("diseaseID")
                        .HasColumnType("int");

                    b.Property<int>("institutionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("vaccineID")
                        .HasColumnType("int");

                    b.HasKey("institutionVaccineID");

                    b.HasIndex("diseaseID");

                    b.HasIndex("institutionID");

                    b.HasIndex("vaccineID");

                    b.ToTable("institutionsVaccines");
                });

            modelBuilder.Entity("VINES.Models.IPAddresses", b =>
                {
                    b.Property<int>("IPAddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IPAddressID"), 1L, 1);

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("violations")
                        .HasColumnType("int");

                    b.HasKey("IPAddressID");

                    b.ToTable("IPAddresses");
                });

            modelBuilder.Entity("VINES.Models.PatientPreferences", b =>
                {
                    b.Property<int>("patientPreferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("patientPreferenceID"), 1L, 1);

                    b.Property<decimal>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("diseaseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("patientID")
                        .HasColumnType("int");

                    b.HasKey("patientPreferenceID");

                    b.HasIndex("diseaseID");

                    b.HasIndex("patientID");

                    b.ToTable("patientPreferences");
                });

            modelBuilder.Entity("VINES.Models.Patients", b =>
                {
                    b.Property<int>("patientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("patientID"), 1L, 1);

                    b.Property<bool>("isSubscribed")
                        .HasColumnType("bit");

                    b.Property<bool>("showAds")
                        .HasColumnType("bit");

                    b.Property<DateTime>("subEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("subStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("patientID");

                    b.HasIndex("userID");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("VINES.Models.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("VINES.Models.Posts", b =>
                {
                    b.Property<int>("postID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("postID"), 1L, 1);

                    b.Property<bool>("isVisible")
                        .HasColumnType("bit");

                    b.HasKey("postID");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("VINES.Models.RecommendedInstitutions", b =>
                {
                    b.Property<int>("recommendedInstitutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("recommendedInstitutionID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("institutionID")
                        .HasColumnType("int");

                    b.Property<int>("userPreferenceID")
                        .HasColumnType("int");

                    b.HasKey("recommendedInstitutionID");

                    b.ToTable("recommendedInstitutions");
                });

            modelBuilder.Entity("VINES.Models.Roles", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleID"), 1L, 1);

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleID");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("VINES.Models.VaccinePreference", b =>
                {
                    b.Property<int>("vaccinePreferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vaccinePreferenceID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("patientPreferenceID")
                        .HasColumnType("int");

                    b.Property<int>("vaccineID")
                        .HasColumnType("int");

                    b.HasKey("vaccinePreferenceID");

                    b.ToTable("vaccinePreference");
                });

            modelBuilder.Entity("VINES.Models.Vaccines", b =>
                {
                    b.Property<int>("vaccineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vaccineID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("diseaseID")
                        .HasColumnType("int");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vaccineID");

                    b.HasIndex("diseaseID");

                    b.ToTable("vaccines");
                });

            modelBuilder.Entity("VINES.Models.WebPages", b =>
                {
                    b.Property<int>("webPageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("webPageID"), 1L, 1);

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("pageContents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postID")
                        .HasColumnType("int");

                    b.Property<int>("sourcesID")
                        .HasColumnType("int");

                    b.Property<string>("summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("uploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("webURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("webPageID");

                    b.ToTable("webPages");
                });

            modelBuilder.Entity("VINES.Models.Advertisement", b =>
                {
                    b.HasOne("VINES.Models.Advertisers", "advertiser")
                        .WithMany()
                        .HasForeignKey("advertiserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Posts", "posts")
                        .WithMany()
                        .HasForeignKey("postID");

                    b.Navigation("advertiser");

                    b.Navigation("posts");
                });

            modelBuilder.Entity("VINES.Models.Advertisers", b =>
                {
                    b.HasOne("VINES.Models.Institutions", "institution")
                        .WithMany()
                        .HasForeignKey("institutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("institution");

                    b.Navigation("user");
                });

            modelBuilder.Entity("VINES.Models.Bookmarks", b =>
                {
                    b.HasOne("VINES.Models.Patients", "patient")
                        .WithMany()
                        .HasForeignKey("patientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Posts", "post")
                        .WithMany()
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient");

                    b.Navigation("post");
                });

            modelBuilder.Entity("VINES.Models.CommunityPost", b =>
                {
                    b.HasOne("VINES.Models.CommunityPostCategoriesModel", "communityPostCategory")
                        .WithMany()
                        .HasForeignKey("communityPostCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Posts", "posts")
                        .WithMany()
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("communityPostCategory");

                    b.Navigation("posts");
                });

            modelBuilder.Entity("VINES.Models.ForumComment", b =>
                {
                    b.HasOne("VINES.Models.ForumPost", "post")
                        .WithMany()
                        .HasForeignKey("forumPostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("VINES.Models.ForumPost", b =>
                {
                    b.HasOne("VINES.Models.ForumCategory", "forumCategory")
                        .WithMany()
                        .HasForeignKey("forumCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Posts", "post")
                        .WithMany()
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("forumCategory");

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("VINES.Models.Institutions", b =>
                {
                    b.HasOne("VINES.Models.InstitutionTypes", "institutionType")
                        .WithMany()
                        .HasForeignKey("institutionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("institutionType");
                });

            modelBuilder.Entity("VINES.Models.InstitutionVaccines", b =>
                {
                    b.HasOne("VINES.Models.Diseases", "disease")
                        .WithMany()
                        .HasForeignKey("diseaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Vaccines", "vaccine")
                        .WithMany()
                        .HasForeignKey("institutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Institutions", "institution")
                        .WithMany()
                        .HasForeignKey("vaccineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disease");

                    b.Navigation("institution");

                    b.Navigation("vaccine");
                });

            modelBuilder.Entity("VINES.Models.PatientPreferences", b =>
                {
                    b.HasOne("VINES.Models.Diseases", "disease")
                        .WithMany()
                        .HasForeignKey("diseaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VINES.Models.Patients", "patient")
                        .WithMany()
                        .HasForeignKey("patientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disease");

                    b.Navigation("patient");
                });

            modelBuilder.Entity("VINES.Models.Patients", b =>
                {
                    b.HasOne("VINES.Data.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("VINES.Models.Vaccines", b =>
                {
                    b.HasOne("VINES.Models.Diseases", "disease")
                        .WithMany()
                        .HasForeignKey("diseaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disease");
                });
#pragma warning restore 612, 618
        }
    }
}
